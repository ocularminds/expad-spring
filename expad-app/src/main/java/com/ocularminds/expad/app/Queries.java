/*
 * Decompiled with CFR 0_118.
 */
package com.ocularminds.expad.app;

import com.ocularminds.expad.model.Card;
import java.util.ArrayList;
import java.util.List;

public final class Queries {
    public static final String DELETE_QUERY = "DELETE FROM CARD  WHERE CID = ";
    public static final String DOWNLOAD_NOTIFICATION = "UPDATE CARD SET STATUS = 'D',LAST_UPDATE_DT = sysdate,LAST_UPDATE_USR = 'EXPAD' WHERE CID = ";
    public static final String PAN_DOWNLOAD_NOTIFICATION = "UPDATE CARD SET STATUS = 'D',LAST_UPDATE_DT = sysdate,LAST_UPDATE_USR = 'EXPAD'  WHERE PAN = ";
    public static final String FUNCTION_EMAIL_EXTRACT = "SELECT DISTINCT(A.USER_ID),A.FNAME,A.EMAIL FROM USERS A, ROLEFUNCTION R,FUNCTIONS F   WHERE A.RID = R.RID AND R.FID = F.FID AND F.URL =";
    public static final String PAN_RECORDS = "SELECT SERIAL_NO,PAN,EXPIRY_DT,OFFSET,STATUS,SOL_ID,PDID FROM PANS ";
    public static final String LINK_ACCT_RECORDS = "select ID,CARD_ID,ACCOUNT_NO  FROM LinkAccount WHERE CARD_ID = ?";
    public static final String TEMP_LINK_ACCT_RECORDS = "select ID,CARD_ID,ACCOUNT_NO FROM TEMP_CARD_ACCT WHERE CARD_ID = ?";
    public static final String CARD_RECORDS = "SELECT ID,BATCH_ID,CUSTOMER_ID,CUSTOMER_NAME,PREF_NAME,SOL,PHONE,EMAIL,COLLECTING_SOL,STAFF_ID,PAN,EXPIRY_DT,OFFSET,CREATE_DT,STATUS,PRODUCT_CODE,SERIAL_NO,CUST_TYPE,SCHOOL,DOB ";
    public static final String UPDATE_TEMP_CARD = "UPDATE TEMP_CARD SET STATUS = 'V' ";
    public static final String NORMALIZE_CARD = "INSERT INTO CARD SELECT * FROM TEMP_CARD";
    public static final String NORMALIZE_CARD_ACCT = "INSERT INTO CARDACCOUNT SELECT * FROM TEMP_CARD_ACCT";
    public static final String DELETE_TEMP_CARD = "delete FROM TEMP_CARD ";
    public static final String DELETE_TEMP_CARD_ACCT = "delete FROM TEMP_CARD_ACCT";
    public static final String INVENTORY_RECORDS = "SELECT SOL_ID,'*' as RANGE,sum(TOTAL) as TOTAL,sum(ISSUED) as ISSUED,sum(BALANCE) as BALANCE,sysdate as CREATE_DT from INVENTORY group by SOL_ID";
    public static final String TRANSACTION_RECORDS = "SELECT TID,CR_ACCT,DR_ACCT,AMOUNT,NARRATION,CREATE_DT,USER_ID,SOL_ID,STATUS FROM TX ";
    public static final String NEW_INVENTORY = "INSERT INTO INVENTORY(OID,SOL_ID,RANGE,TOTAL,ISSUED,BALANCE,CREATE_DT) VALUES(?,?,?,?,?,?,?)";
    public static final String INVENTORY_UPDATE = "UPDATE INVENTORY SET ISSUED = ISSUED + 1,BALANCE = TOTAL - ISSUED - 1 WHERE ";
    public static final String NEW_BATCH = "INSERT INTO BATCH(BID,CREATE_DT,USER_ID) VALUES(?,?,?) ";
    public static final String USER_RECORDS = "SELECT OID,USER_ID,TITLE,UNAME,RID,LOGIN_STATUS,SOL_ID,PASSWORD,EXPIRY,CREATE_DT,FIRST_LOG,LAST_PASS_CHG,READ_ONLY,DISABLED,SUSR,EMAIL FROM USERS ";
    public static final String NEW_CARD = "INSERT INTO CARD(ID,BATCH_ID,CUSTOMER_ID,CUSTOMER_NAME,PREF_NAME,SOL,PHONE,EMAIL,PAN,EXPIRY_DT,OFFSET,SERIAL_NO,PRODUCT_CODE,STAFF_ID,CREATE_DT,STATUS,COLLECTING_SOL,CUST_TYPE,SCHOOL,DOB) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) ";
    public static final String NEW_TEMP_CARD = "INSERT INTO TEMP_CARD(ID,BATCH_ID,CUSTOMER_ID,CUSTOMER_NAME,PREF_NAME,SOL,PHONE,EMAIL,PAN,EXPIRY_DT,OFFSET,SERIAL_NO,PRODUCT_CODE,STAFF_ID,CREATE_DT,STATUS,COLLECTING_SOL) VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) ";
    public static final String NEW_CARD_ACCT = "INSERT INTO CARDACCOUNT(ID,CARD_ID,ACCOUNT_NO) VALUES(?,?,?) ";
    public static final String NEW_TEMP_CARD_ACCT = "INSERT INTO TEMP_CARD_ACCT(ID,CARD_ID,ACCOUNT_NO) VALUES(?,?,?) ";
    public static final String NEW_TRANSACTION = "INSERT INTO Tx(TID,CR_ACCT,DR_ACCT,AMOUNT,NARRATION,CREATE_DT,USER_ID,SOL_ID,STATUS) VALUES(?,?,?,?,?,?,?,?,?)";
    public static final String DISTRIBUTION_QUERY = "SELECT SOL_ID, MIN(SERIAL_NO) AS START_OID,MAX(SERIAL_NO) AS END_OID FROM PANS WHERE SOL_ID IS NOT NULL    AND STATUS = 'O' GROUP BY SOL_ID ORDER BY 2";
    public static final String SUMARRY_QUERY = "SELECT distinct(SOL_ID),COUNT(PAN) AS TOTAL_CARDS FROM CARD WHERE UPPER(PREF_NAME) NOT LIKE '%PAYDIRECT%'  ";
    public static final String CARD_PROGRAM_RECORDS = "SELECT CARD_PROGRAM,CARD_PROGRAM_ID,PIN_VERIFICATION_METHOD,PIN2_VERIFICATION_METHOD,PIN_VERIFICATION_KEY,PIN2_VERIFICATION_KEY,CVV_KEY,CVV2_KEY,EMV_CRYPTOGRAM_KEY,EMV_SCHEME,SERVICE_CODE,GENERATE_PIN,GENERATE_PIN2,DISCRETIONARY_DATA,GENERATE_EMV_PIN_MANAGEMENT_SCRIPTS,CARD_PREFIX,ISSUER_NR,CONTACTLESS_DISCRETIONARY_DATA,DCVV_KEY_INDEX FROM PC_CARD_PROGRAMS (NOLOCK) WHERE CARD_PROGRAM = ";
    public static final String ISSUER_RECORDS = "SELECT ISSUER_NR,ISSUER_NAME,CARD_PRODUCTION_ISSUER_ID,CONTACT_ADDRESS_1,CONTACT_ADDRESS_2,CONTACT_CITY,CONTACT_REGION,CONTACT_POSTAL_CODE,CONTACT_COUNTRY,CARD_MAILER_RETURN_ADDRESS_1,CARD_MAILER_RETURN_ADDRESS_2,CARD_MAILER_RETURN_CITY,CARD_MAILER_RETURN_REGION,CARD_MAILER_RETURN_POSTAL_CODE,CARD_MAILER_RETURN_COUNTRY,CARD_MAILER_RETURN_TEL_NR,CARD_MAILER_MSG_LINE_1,CARD_MAILER_MSG_LINE_2,CARD_MAILER_MSG_LINE_3,CARD_MAILER_MSG_LINE_4,PIN_MAILER_RETURN_ADDRESS_1,PIN_MAILER_RETURN_ADDRESS_2,PIN_MAILER_RETURN_CITY,PIN_MAILER_RETURN_REGION,PIN_MAILER_RETURN_POSTAL_CODE,PIN_MAILER_RETURN_COUNTRY,PIN_MAILER_RETURN_TEL_NR, PIN_EXPORT_KEY FROM PC_ISSUERS (NOLOCK) WHERE ISSUER_NAME =";

    public static String fromCards(List<Card> records) {
        StringBuilder data = new StringBuilder();
        data.append("'");
        for (int x = 0; x < records.size(); ++x) {
            String line = records.get(x).getId();
            data.append(line);
            if (x >= records.size() - 1) continue;
            data.append("','");
        }
        data.append("'");
        return data.toString();
    }
}

